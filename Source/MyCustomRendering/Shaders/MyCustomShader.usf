// MyCustomShader.usf

#include "/Engine/Private/Definitions.usf"    // For FViewUniformShaderParameters
#include "/Engine/Private/Common.ush"         // Common shader utilities

struct PixelInputType
{
    float4 Position : SV_POSITION; // Position of the pixel in screen space
    float2 TexCoord : TEXCOORD0; // Texture coordinates
    float3 Normal : NORMAL; // Normal vector
    float3 ViewDir : TEXCOORD1; // View direction (custom data)
};

// Shader parameters
Texture2D BaseTexture;
SamplerState BaseTextureSampler;
float4 HighlightColor;
float FresnelExponent;
Texture2D SceneColorTexture;

float4 MainPS(PixelInputType In) : SV_Target0
{
    return HighlightColor;
    
    //float4 SceneColor = SceneColorTexture.Sample(BaseTextureSampler, In.TexCoord);

    //float FresnelFactor = pow(1.0f - saturate(dot(normalize(In.Normal), normalize(In.ViewDir))), FresnelExponent);

    //return lerp(SceneColor, FresnelFactor * HighlightColor, FresnelFactor);
}
